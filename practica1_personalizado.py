# -*- coding: utf-8 -*-
"""Practica1_Personalizado.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gFaKGYDKeEFJjClWp_ZG-Otk3fxWjLFh
"""

import tensorflow as tf
import numpy as np

# Función de conversión de kilogramos a libras
def kg_a_libras(kg):
    return kg * 2.20462

# Datos de entrada (en kilogramos)
kilogramos = np.array([10, 20, 30, 40, 50], dtype=float)
# Valores objetivo correspondientes (en libras)
libras = kg_a_libras(kilogramos)

# Definir el modelo
oculta1 = tf.keras.layers.Dense(units=3, input_shape=[1])
oculta2 = tf.keras.layers.Dense(units=3)
salida = tf.keras.layers.Dense(units=1)
modelo = tf.keras.Sequential([oculta1, oculta2, salida])

# Compilar el modelo
modelo.compile(
    optimizer=tf.keras.optimizers.Adam(0.1),
    loss='mean_squared_error'
)

# Entrenar el modelo
print("Entrenando el modelo...")
historia = modelo.fit(kilogramos, libras, epochs=1000, verbose=False)
print("¡Modelo entrenado!")

# Graficar la pérdida durante el entrenamiento
import matplotlib.pyplot as plt
plt.xlabel("Época")
plt.ylabel("Magnitud de Pérdida")
plt.plot(historia.history["loss"])
plt.show()

# Hacer predicciones para nuevos valores
print("¡Hacer una predicción!")
kg_a_predecir = 75.0
prediccion = modelo.predict([kg_a_predecir])
print(f"El peso predicho en libras para {kg_a_predecir} kilogramos es: {prediccion[0][0]} libras")