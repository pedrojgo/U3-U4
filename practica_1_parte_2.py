# -*- coding: utf-8 -*-
"""Practica 1 Parte 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yiO_doi-zpGp5IO9221Npytj1GDENOL7

Practica 1-Parte 2
"""

import tensorflow as tf
import numpy as np

pie = np.array([5,8,12,20,62], dtype=float)
metro = np.array([1.524,2.4384,3.6576,6.096,18.8976], dtype=float)

#capa = tf.keras.layers.Dense(units=1, input_shape=[1])
#modelo = tf.keras.Sequential([capa])
oculta1 = tf.keras.layers.Dense(units=3, input_shape=[1])
oculta2 = tf.keras.layers.Dense(units=3)
salida = tf.keras.layers.Dense(units=1)
modelo = tf.keras.Sequential([oculta1,oculta2,salida])

modelo.compile(
    optimizer=tf.keras.optimizers.Adam(0.1),
    loss='mean_squared_error'
)

print("Comenzando entrenamiento...")
historial=modelo.fit(pie,metro,epochs=1000,verbose=False)
print("Modelo entrenado!")

import matplotlib.pyplot as plt
plt.xlabel("Epoca")
plt.ylabel("Magnitud de perdida")
plt.plot(historial.history["loss"])

print("Realizar una predicci√≥n!!")
resultado=modelo.predict([50.0])
print("El resultado es" + str(resultado) + "metros")